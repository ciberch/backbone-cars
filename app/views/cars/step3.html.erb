<div class="span12">

    <div class="row-fluid">

        <div class="span12 page-title">

            <div class="btn-toolbar">
                <div class="filters-view"></div>
            </div>

            <div class="colors-view"></div>

        </div>

    </div> <!-- end the filtering widgets -->

    <div class="row-fluid">

        <div class="span12 cars-view"></div>

    </div>

</div>

<% content_for :js do %>

<script>

    var PermissionModel = Backbone.Model.extend({           
        defaults : {
            
        }
    });
    var Permissions = new PermissionModel();

    $(document).ready(function() {  

        // set up the dropdown comboboxes here
        var countryList = new CountryList();
        var makeList = new MakeList();
        var carmodelList = new CarModelList();
        var filterView = new FilterView({countryCollection: countryList, makeCollection: makeList, carmodelCollection: carmodelList});

        // set up the color filters here
        var colorView = new ColorView();

        $(".filters-view").append(filterView.render().el);
        $(".colors-view").append(colorView.render().el);

        // set all the countries directly into the countryList, to save a request
        countryList.reset(<%=get_json("countries", "index", @countries)%>);

        // REMEMBER - fetch is async!!  This is the biggest mistake made by people new to Backbone!
        // So you can't call carmodelList.fetchWithParams on the next line,
        // you have to do it once the makeList.fetch completes, using the success callback
        // fetchWithParams uses the ParamFetchCollection Backbone mixin, which calls fetch within it
        makeList.fetchWithParams(
                {
                    success: function(collection) {
                        carmodelList.fetchWithParams({},{make_name: filterView.make, country_name: filterView.country});
                    }
                }, {country_name: filterView.country});

    });

</script>

<% end %>